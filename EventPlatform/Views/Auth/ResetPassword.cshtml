@{
    ViewData["Title"] = "Reset Password";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Event Platform - Reset Password</title>
    <link rel="stylesheet" href="~/css/auth.css" />
</head>
<body>
    <div class="login-container">
        <div class="image-section">
            <img src="https://r2-us-west.photoai.com/1725049228-59e5679be5ad1ee0f05c529c09f2f50d-1.png" alt="Event Platform" />
        </div>

        <div class="form-section">
            <div class="header">
                <div class="brand-name">Event Platform</div>
                <div class="tabs">
                    <div class="tab active">Reset Password</div>
                </div>
            </div>

            <form id="resetForm">
                <div id="message" class="alert" style="display:none;"></div>

                <div class="form-group">
                    <input type="password" id="newPassword" placeholder="Enter new password" required />
                </div>
                <div class="form-group">
                    <input type="password" id="confirmPassword" placeholder="Confirm new password" required />
                </div>

                <button type="submit" class="btn-login">Reset Password</button>

                <div class="link" style="text-align:center; margin-top:20px;">
                    <a href="@Url.Action("Index", "Auth")" style="color:#D9027D; text-decoration:none;">Back to Login</a>
                </div>
            </form>
        </div>
    </div>

<script>
document.addEventListener("DOMContentLoaded", async () => {
    const token = new URLSearchParams(window.location.search).get("token");
    const messageDiv = document.getElementById("message");

    if (!token) {
        messageDiv.textContent = "Invalid or missing token.";
        messageDiv.style.display = "block";
        messageDiv.style.background = "#f8d7da";
        messageDiv.style.color = "#721c24";
        return;
    }

    const verifyRes = await fetch(`https://localhost:7063/api/auth/reset-password/verify?token=${token}`);
    const verifyData = await verifyRes.json();

    if (!verifyRes.ok || !verifyData.success) {
        messageDiv.textContent = verifyData.message || "Invalid or expired token.";
        messageDiv.style.display = "block";
        messageDiv.style.background = "#f8d7da";
        messageDiv.style.color = "#721c24";
        return;
    }

    document.getElementById("resetForm").addEventListener("submit", async (e) => {
        e.preventDefault();
        const newPassword = document.getElementById("newPassword").value.trim();
        const confirmPassword = document.getElementById("confirmPassword").value.trim();

        try {
            const res = await fetch("https://localhost:7063/api/auth/reset-password", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ token, newPassword, confirmPassword })
            });
            const result = await res.json();

            if (!res.ok || !result.success) {
                messageDiv.textContent = result.message || "Failed to reset password.";
                messageDiv.style.display = "block";
                messageDiv.style.background = "#f8d7da";
                messageDiv.style.color = "#721c24";
                return;
            }

            messageDiv.textContent = "Password has been reset successfully!";
            messageDiv.style.display = "block";
            messageDiv.style.background = "#d4edda";
            messageDiv.style.color = "#155724";

            setTimeout(() => {
                window.location.href = "@Url.Action("Index", "Auth")";
            }, 1500);
        } catch {
            messageDiv.textContent = "Unable to connect to server.";
            messageDiv.style.display = "block";
        }
    });
});
</script>
</body>
</html>
